#kernel command arguments
enforcing=1
earlyprintk=sunxi-uart,0x01c28000
initcall_debug=0
console=ttyS0,115200 console=tty1
#if root_partition exist in partition, nor_root/nand_root/mmc_root will change at runtime
root_partition=rootfs
nor_root=/dev/mtdblock4
nand_root=/dev/nandd
mmc_root=/dev/mmcblk0p2
init=/sbin/init
#init=/init
loglevel=8
cma=256M
boot_partition=boot
#handle ota=1 in initramfs
ota=0
#set kernel cmdline if boot.img or recovery.img has no cmdline we will use this
setargs_nor=setenv bootargs ota=${ota} boot_partition=${boot_partition} enforcing=${enforcing} earlyprintk=${earlyprintk} initcall_debug=${initcall_debug} console=${console} loglevel=${loglevel} root=${nor_root} rootwait rdinit=${rdinit} init=${init} partitions=${partitions} cma=${cma}
setargs_nand=setenv bootargs ota=${ota} boot_partition=${boot_partition} enforcing=${enforcing} earlyprintk=${earlyprintk} initcall_debug=${initcall_debug} console=${console} loglevel=${loglevel} root=${nand_root} rootwait rdinit=${rdinit} init=${init} partitions=${partitions} cma=${cma}
setargs_mmc=setenv  bootargs ota=${ota} boot_partition=${boot_partition} enforcing=${enforcing} earlyprintk=${earlyprintk} initcall_debug=${initcall_debug} console=${console} loglevel=${loglevel} root=${mmc_root} rootwait rdinit=${rdinit} init=${init} partitions=${partitions} cma=${cma}

#BPI
#uImage/fat32  Image.gz
#boot_normal=fatload sunxi_flash ${boot_partition} 45000000 uImage;bootm 45000000
#boot_recovery=fatload sunxi_flash recovery 45000000 uImage;bootm 45000000

#boot.img/fat32
#boot_normal=fatload sunxi_flash ${boot_partition} 45000000 boot.img;boota 45000000 ${boot_partition}
#boot_recovery=fatload sunxi_flash recovery 45000000 boot.img;boota 45000000 recovery

#uImage/raw
#boot_normal=sunxi_flash read 45000000 ${boot_partition};bootm 45000000
#boot_recovery=sunxi_flash read 45000000 recovery;bootm 45000000

#boot.img/raw  same as sunxi-dev
#boot_normal=sunxi_flash read 45000000 ${boot_partition};boota 45000000 ${boot_partition}
#boot_recovery=sunxi_flash read 45000000 recovery;boota 45000000 recovery
#
##
bpiver=1
bpi=bananapi
board=bpi-m64
chip=r18
service=linux4.4
#
##
#
bpiuser=1080p
#
##
#
panicarg=panic=10
scriptaddr=0x44000000
initrd_high=0x60000000
device=mmc
partition=0:1
kernel=uImage
bootenv=uEnv.txt
bpienv=bpiEnv.txt
script=script.bin
checkemmc=fatinfo $device 2:1
#
##
#
loadbootenv=fatload $device $partition $scriptaddr ${bpi}/${board}/${service}/${bpiuser}/${bootenv} || fatload $device $partition $scriptaddr ${bpi}/${board}/${service}/${bootenv} || fatload $device $partition $scriptaddr ${bootenv}
#
loadbpienv=fatload $device $partition $scriptaddr ${bpi}/${board}/${service}/${bpiuser}/${bpienv} || fatload $device $partition $scriptaddr ${bpi}/${board}/${service}/${bpienv} || fatload $device $partition $scriptaddr ${bpienv}
#
#boot_normal=fatload sunxi_flash boot 43800000 uImage;bootm 43800000
#boot_normal=fatload mmc 0:1 43800000 uImage;bootm 43800000
#
boot_normal=if run checkemmc; then setenv partition 2:1; fi; if run loadbpienv; then echo Loaded environment from ${bpienv}; env import -t ${scriptaddr} ${filesize}; fi;if run loadbootenv; then echo Loaded environment from ${bootenv}; env import -t ${scriptaddr} ${filesize}; fi; if test -n "${uenvcmd}"; then echo Running uenvcmd ...; run uenvcmd; fi; fatload sunxi_flash read 45000000 boot;boota 45000000 boot
#boot_normal=sunxi_flash read 45000000 boot;boota 45000000 boot
#
#
#boot_normal=fatload sunxi_flash boot 45000000 uImage;bootm 45000000
boot_recovery=fatload sunxi_flash recovery 45000000 uImage;bootm 45000000





boot_fastboot=fastboot
#recovery key
recovery_key_value_max=0x13
recovery_key_value_min=0x10
#fastboot key
fastboot_key_value_max=0x8
fastboot_key_value_min=0x2

#uboot system env config
bootdelay=2
#default bootcmd, will change at runtime according to key press
bootcmd=run setargs_nand boot_normal#default nand boot
